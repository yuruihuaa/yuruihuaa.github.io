(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{368:function(s,t,a){"use strict";a.r(t);var e=a(44),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),a("h2",{attrs:{id:"集中式和分布式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集中式和分布式"}},[s._v("#")]),s._v(" 集中式和分布式")]),s._v(" "),a("p",[s._v("集中式：SVN")]),s._v(" "),a("p",[s._v("分布式：GIT")]),s._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("p",[s._v("全局配置，修改了~/.gitconfig")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name@outlook.com'")]),s._v("\n")])])]),a("p",[s._v("局部配置，--local可以省略")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name@outlook.com'")]),s._v("\n")])])]),a("h2",{attrs:{id:"基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[s._v("#")]),s._v(" 基本操作")]),s._v(" "),a("p",[s._v("创建仓库，新增.git文件夹，.git/config是这个仓库的配置文件")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n")])])]),a("p",[s._v("touch命令新建空白文件，file.js状态是Untracked未追踪，没有被git追踪")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" file.js\n")])])]),a("p",[s._v("执行git add后，文件被放入暂存区，状态是Changes to be committed，等待被提交")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" file.js  一个文件进入暂存区\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("   所有文件进入暂存区\n")])])]),a("p",[s._v("执行git commit后，提交到版本库")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Commit描述"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit\n")])])]),a("p",[s._v("修改file.js文件，file.js文件被修改，状态变成Changes not staged for commit")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n")])])]),a("p",[s._v(".gitignore文件，告诉Git哪些文件不需要加入版本管理中")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("*.txt   忽略所有的文本文件\n！file.txt  除了file.txt文件\n/node_modules 忽略文件夹\n")])])]),a("p",[s._v("执行git rm后，file.js从版本库和本地删除，加--cached参数时，只从版本库删除，本地保留，file.js状态变成Untracked")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" file.js\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" --cached file.js\n")])])]),a("p",[s._v("git mv修改文件名")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" file.js file.txt\n")])])]),a("p",[s._v("git log查看历史提交")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log -p 显示详细内容\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log -2 查看两条\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --oneline 显示一行信息\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --name-only 只看有变化的文件\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --name-status 查看变化的文件是新增还是修改\n")])])]),a("p",[s._v("git commit --amend修改最新一次Commit描述，如果暂存区如果有内容，执行命令后，暂存区的内容也一起提交到这次commit")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit --amend \n")])])]),a("p",[s._v("撤销，git restore丢弃修改，同git checkout，git restore --staged将文件从暂存区撤回工作区，撤销git add")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" restore --staged file.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" restore file.txt\n")])])]),a("p",[s._v("给命令加别名，git s查看仓库状态")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global alias.s status\n")])])]),a("h2",{attrs:{id:"分支操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[s._v("#")]),s._v(" 分支操作")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch BranchName  新建Name分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch  查看分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout BranchName  切换分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b BranchName 新建并切换到BranchName\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge BranchName  位于当前分支，合并BranchName分支到当前分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d BranchName 删除BranchName分支\n")])])]),a("p",[s._v("分支冲突，不同的分支修改同一个资源，合并时产生冲突，修复冲突后add，commit，如冲突")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<<<<<<< HEAD\ncontent1\n=======\ncontent2\n>>>>>>> Branch1\n")])])]),a("p",[s._v("--merged查看已经合并到当前分支的分支列表，合并过的分支通常可以删除，--no-merged查看没有合并到当前分支的分支，慎重删除，如果删除没有合并的分支，会提示")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --merged\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --no-merged\nBranch2\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d Branch2\nerror: The branch "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Branch2'")]),s._v(" is not fully merged.\nIf you are sure you want to delete it, run "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch -D Branch2'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("p",[s._v("一般master作为稳定分支，然后有一个develop分支作为开发分支，如果添加新功能，会基于develop分支新建功能分支，功能分支完成后合并到develop分支，develop分支测试通过后，合并到稳定的master分支")]),s._v(" "),a("p",[s._v("在当前分支工作，想切换到其他分支，在当前分支使用git stash临时存储，新增的文件因为不被git管理，git stash对新文件无效")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash list\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash apply  不删\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash pop  删\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash drop\n")])])]),a("p",[s._v("打标签，如版本号，一般只有稳定的版本才打上标签")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag  显示所有的标签\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag v1.0 打标签\n")])])]),a("p",[s._v("生成zip、tar压缩包发布代码，打包master分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" archive --format"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("zip --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("git-docs/ master "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" git-1.4.0-docs.zip\n")])])]),a("p",[s._v("从master分支新建一个子分支用于开发，在子分支完成工作后，这是master分支有新的commit，即master分支往前走了，此时在master分支执行merge子分支时提示冲突，并产生一次新的merge commit，解决方法时在子分支执行git rebase，修改子分支的基础点位master新commit，可能会产生冲突，由子分支的开发者处理，然后再在master分支执行git merge")]),s._v(" "),a("p",[s._v("这种情况和master分支和子分支共同修改同一个文件是不同的")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase master\n")])])]),a("h2",{attrs:{id:"远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[s._v("#")]),s._v(" 远程仓库")]),s._v(" "),a("p",[s._v("GitHub国外代码托管平台")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ssh-keygen -r rsa  生成密钥 公钥/私钥\n")])])]),a("p",[s._v("本地分支与远程分支关联")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin git@github.com:XX/XX.git  添加远程仓库，并起名origin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote -v 显示所有远程仓库\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin 将当前分支推送到origin对应分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master 将本地的master分支推送到origin主机\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin master  将本地的master分支推送到origin主机，同时指定origin为默认主机\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -a 显示所有的本地和远程分支\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --set-upstream-to"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" master 为本地分支master添加上游分支，即添加远程分支\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin BranchName:BranchName 本地没有BranchName分支，从远程拉去BranchName，并在本地新建BranchName\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --delete BranchName\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin -d BranchName 删除远程分支BranchName\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d BranchName 删除本地分支BranchName\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);